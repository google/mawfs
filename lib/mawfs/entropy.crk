# Copyright 2016 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## Entropy generators.

import crack.io Reader;
import crack.fs makePath, Path;

@import crack.ann impl, interface;

@interface EntropySource {
    ## Returns a single random byte.
    @abstract byte getByte();

    ## Returns a string of random bytes of length 'len'.
    @abstract String getString(uint len);
}

class DeviceEntropySource @impl EntropySource {
    Reader __dev;

    oper init(Path urandomDevice) : __dev = urandomDevice.reader() {}

    ## Returns a single random byte.
    byte getByte() {
        return __dev.read(1)[0];
    }


    ## Returns a string of random bytes of length 'len'.
    String getString(uint len) {
        return __dev.read(len);
    }
}

EntropySource __source;
EntropySource getEntropySource() {
    if (!__source)
        __source = DeviceEntropySource(makePath('/dev/urandom'));
    return __source;
}

void setEntropySource(EntropySource source) {
    __source = source;
}